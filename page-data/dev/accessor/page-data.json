{"componentChunkName":"component---src-templates-documentation-page-js","path":"/dev/accessor/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"manual-access\" style=\"position:relative;\"><a href=\"#manual-access\" aria-label=\"manual access permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Manual access</h3>\n<p>To manually SSH into the accessor instance, we use AWS Session Manager. This way, we don't need to run an EC2 bastion instance that's exposed to the public Internet.</p>\n<ul>\n<li>First, install the AWS CLI on your development machine and run <code class=\"language-text\">aws configure</code> and enter your credentials.</li>\n<li>Install the <a href=\"https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html\">Session Manager plugin</a> to the AWS CLI on your development machine.</li>\n<li>\n<p>Set up a Session Manager port forwarding session to allow SSH access to the instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Set this environment variable to the ID of the EC2 bastion instance (which should be in a private subnet, but able to connect to the RDS instance).</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">INSTANCE_ID</span><span class=\"token operator\">=</span>i-053b6d4bb95b01b28 <span class=\"token comment\"># Dev instance ID</span>\n<span class=\"token comment\"># Generate an SSH key and send it to the EC2 instance</span>\n<span class=\"token comment\"># (this only needs to be done once).</span>\nssh-keygen -f accessor_rsa\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> accessor_rsa\naws ec2-instance-connect send-ssh-public-key <span class=\"token punctuation\">\\</span>\n  --instance-id <span class=\"token variable\">$INSTANCE_ID</span> <span class=\"token punctuation\">\\</span>\n  --availability-zone us-east-1b <span class=\"token punctuation\">\\</span>\n  --instance-os-user ubuntu <span class=\"token punctuation\">\\</span>\n  --ssh-public-key file://accessor_rsa.pub\n\n<span class=\"token comment\"># Start port forwarding.</span>\naws ssm start-session <span class=\"token punctuation\">\\</span>\n  --target <span class=\"token variable\">$INSTANCE_ID</span> <span class=\"token punctuation\">\\</span>\n  --document-name AWS-StartPortForwardingSession <span class=\"token punctuation\">\\</span>\n  --parameters <span class=\"token string\">'{\"portNumber\":[\"22\"], \"localPortNumber\":[\"9999\"]}'</span></code></pre></div>\n</li>\n<li>\n<p>In another terminal, SSH into the instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> ubuntu@localhost -p <span class=\"token number\">9999</span> -i accessor_rsa</code></pre></div>\n</li>\n<li>Once you SSH into the instance, you should now be able to access the database and run scripts on it. (Contact Ashwin for the database credentials)</li>\n</ul>","frontmatter":{"title":"","sidenav":null},"fields":{"slug":"/dev/accessor/"},"headings":[{"value":"Manual access","depth":3}]}},"pageContext":{"name":"/dev/accessor/"}},"staticQueryHashes":["1824138477","3841949133","63159454"]}